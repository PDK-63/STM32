#include "main.h"

#include "string.h"
#include "ssd1306.h"
#include "ssd1306_tests.h"
#include "ssd1306_fonts.h"
#include <string.h>
#include <stdio.h>

#define OK 			HAL_GPIO_ReadPin(BT10_OK_GPIO_Port, BT10_OK_Pin)
#define UP 			HAL_GPIO_ReadPin(BT9_DOWN_GPIO_Port, BT9_DOWN_Pin)
#define DOWN 		HAL_GPIO_ReadPin(BT11_UP_GPIO_Port, BT11_UP_Pin)
#define BACK		HAL_GPIO_ReadPin(BT1_UP_GPIO_Port, BT1_UP_Pin)

#define UP			HAL_GPIO_ReadPin(BT1_UP_GPIO_Port, BT1_UP_Pin)						// Dieu khien len
#define DOWN		HAL_GPIO_ReadPin(BT3_DOW_GPIO_Port, BT3_DOW_Pin)					// Dieu khien xuong
#define LEFT		HAL_GPIO_ReadPin(BT4_L_GPIO_Port, BT4_L_Pin)						// Dieu khien sang trai
#define RIGHT		HAL_GPIO_ReadPin(BT2_R_GPIO_Port, BT2_R_Pin)					// Dieu khien sang phai

#define BACK		HAL_GPIO_ReadPin(BT9_SELECT_GPIO_Port, BT9_SELECT_Pin)
#define SELECT		HAL_GPIO_ReadPin(BT11_BACK_GPIO_Port, BT11_BACK_Pin)

int trangthai = 1;
int cnt = 0;

int select = 0;
int enter = -1;

// Khai bao cac bien cho nut nhan Menu
uint8_t tt_up = 1;					// bien trang thai cho nut nhan Len
uint8_t tt_down = 1;				// Bien trang thai cho nut nhan Xuong
uint8_t tt_left = 1;
uint8_t tt_right = 1;
uint8_t tt_slect = 1;					// Bien trang thai cho nut nhan OK
uint8_t tt_back = 1;				// Bien trang thai cho nut Back

uint8_t cnt_menu = 0;				// Bien dem trong su dung trong Menu
uint8_t cnt_Oled = 0;

uint8_t pre_cnt_menu = 0;
uint8_t pre_cnt_Oled = 0;
uint8_t pre_enter = -1;
int i;

void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_I2C1_Init(void);

void Read_BT(void)
{
	// Doc Nut Nhan BT1			==> UP
    if (UP == 0)
	{
		if (tt_up == 1)
		{
			cnt++;
			tt_up = 0;
		}
	}
	else
	{
		tt_up = 1;
	}

    // Doc Nut Nhan BT2			==> RIGHT
    if (RIGHT == 0)
	{
		if (tt_right == 1)
		{
			cnt++;
			tt_right = 0;
		}
	}
	else
	{
		tt_right = 1;
	}

    // Doc Nut Nhan BT3			==> DOWN
	if (DOWN == 0)
	{
		if (tt_down == 1)
		{
			cnt++;
			tt_down = 0;
		}
	}
	else
	{
		tt_down = 1;
	}

	// Doc Nut Nhan BT4			==> LEFT
	if (LEFT == 0)
	{
		if (tt_left == 1)
		{
			cnt--;
			tt_left = 0;
		}
	}
	else
	{
		tt_left = 1;
	}

	// Doc Nut Nhan BT9			==> Select
	if (SELECT == 0)
	{
		if (tt_slect == 1)
		{
			cnt++;
			tt_slect = 0;
		}
	}
	else
	{
		tt_slect = 1;
	}

	// Doc Nut Nhan BT11			==> Back
	if (BACK == 0)
	{
		if (tt_back == 1)
		{
			cnt++;
			tt_back = 0;
		}
	}
	else
	{
		tt_back = 1;
	}
}

// Ham Hien thi tren man hinh OLED
void Display_OLED(void)
{
	ssd1306_Fill(Black);
	ssd1306_DrawBitmap(0,0,image_battery_128x64,128,64,White);
	ssd1306_DrawBitmap(30,9,car_64x64,128,64,White);
	ssd1306_FillRectangle(113, 3, 124, 8, White);
	ssd1306_FillRectangle(3, 3, 15, 8, White);

	ssd1306_SetCursor(7, 53);
	ssd1306_WriteString("Menu", Font_7x10, White);

	ssd1306_SetCursor(90, 53);
	ssd1306_WriteString(" Back", Font_7x10, White);

	ssd1306_UpdateScreen();

	// Cho chu chay
	//ssd1306_Fill(Black);
//	ssd1306_SetCursor(0,20);
//	ssd1306_WriteString("Lewlew:", Font_7x10, White);
//	ssd1306_UpdateScreen();
//	HAL_Delay(1000);
//	SSD1306_ScrollLeft(0, 10);
}

void Display_Menu(void)
{
	SSD1306_Clear();
	ssd1306_Fill(Black);
	ssd1306_SetCursor(7, 2);
	ssd1306_WriteString("Menu 1", Font_11x18, White);

	ssd1306_SetCursor(7, 22);
	ssd1306_WriteString("Menu 2", Font_11x18, White);

	ssd1306_SetCursor(7, 42);
	ssd1306_WriteString("Menu 3", Font_11x18, White);

	if(cnt_menu == 1)
	{
		ssd1306_DrawRectangle(0,2,128,18, White);
		ssd1306_DrawRectangle(0,21,128,37, Black);
		ssd1306_DrawRectangle(0,41,128,57, Black);
	}

	else if(cnt_menu == 2)
	{
		ssd1306_DrawRectangle(0,2,128,18, Black);
		ssd1306_DrawRectangle(0,21,128,37, White);
		ssd1306_DrawRectangle(0,41,128,57, Black);
	}

	else if(cnt_menu == 3)
	{
		ssd1306_DrawRectangle(0,2,128,18, Black);
		ssd1306_DrawRectangle(0,21,128,37, Black);
		ssd1306_DrawRectangle(0,41,128,57, White);
	}
	else if(cnt_menu > 3)
	{
		cnt_menu = 3;
	}
	
	ssd1306_UpdateScreen();
}

void Display_Select(void)
{
	// Nut nhan Len
	if(UP == 0)
	{
		if(tt_up == 1)
		{
			cnt_menu--;
			tt_up = 0;
		}
	}
	else
	{
		tt_up = 1;
	}

	// Nut nhan xuong
	if(DOWN == 0)
	{
		if(tt_down == 1)
		{
			cnt_menu++;
			tt_down = 0;
		}
	}

	else
	{
		tt_down = 1;
	}

	// Nut nhan OK
	if(SELECT == 0)
	{
		if(tt_slect == 1)
		{
			enter = cnt_Oled;
			tt_slect = 0;
		}
	}

	else
	{
		tt_slect = 1;
	}

	// Nut Sang Phai
	if (RIGHT == 0)
	{
		if (tt_right == 1)
		{
			cnt_Oled++;
			tt_right = 0;
		}
	}
	else
	{
		tt_right = 1;
	}

	// Nut Sang Trai

	if (LEFT == 0)
	{
		if (tt_left == 1)
		{
			cnt_Oled--;
			tt_left = 0;
		}
	}
	else
	{
		tt_left = 1;
	}
	// Nut nhan Back
	if (BACK == 0)
	{
		if (tt_back == 1)
		{
			SSD1306_Clear();
			enter = -1;
			cnt_menu = 0;
			Display_OLED();
			tt_back = 0;
		}
	}
	else
	{
		tt_back = 1;
	}
	if((cnt_menu != pre_cnt_menu) || (enter != pre_enter) || (cnt_Oled != pre_cnt_Oled))
	{

		// Thuc hien ngoai man hinh chinh
		if(cnt_Oled == 1)
		{
			ssd1306_SetCursor(87, 52);
			ssd1306_WriteString(" ", Font_7x10, White);
			ssd1306_SetCursor(0, 52);
			ssd1306_WriteString(">", Font_7x10, White);
		}

		else if(cnt_Oled == 2)
		{
			ssd1306_SetCursor(0, 52);
			ssd1306_WriteString(" ", Font_7x10, White);
			ssd1306_SetCursor(87, 52);
			ssd1306_WriteString(">", Font_7x10, White);
		}
		else if(cnt_Oled > 2)
		{
			cnt_Oled = 2;
		}

		if((cnt_Oled == 1) && (enter == 1))
		{
			Display_Menu();
		}
	}
	ssd1306_UpdateScreen();
	// Cap nhat lai gia tri cua bien "cnt_menu" va "enter" de khong bi nhay khi cho vao vong lap "White"
	pre_cnt_menu = cnt_menu;
	pre_cnt_Oled = cnt_Oled;
	pre_enter = enter;
}

int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_I2C1_Init();
  /* USER CODE BEGIN 2 */
  ssd1306_Init();

  Display_OLED();
  /* USER CODE END 2 */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */

	  Display_Select();
	  //Read_BT();
  }
  /* USER CODE END 3 */
}
